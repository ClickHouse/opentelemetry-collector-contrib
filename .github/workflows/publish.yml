name: publish
on:
  workflow_run:
    types:
      - completed
    workflows:
      - build-and-test
jobs:
  publish-dev:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21.12"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Mkdir bin and dist
        run: |
          mkdir bin/ dist/
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
      - name: Install dependencies
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: make -j2 gomoddownload
      - name: Install Tools
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: make install-tools
      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: collector-binaries
          path: ./bin/
      - run: chmod +x bin/*
      - name: Sanitize branch name and create version
        id: create-version
        env:
          BRANCH: ${{github.ref_name}}
          RUN_NUMBER: ${{github.run_number}}
          BASE_VERSION: "0.0.0"
        run: |
          # let's simply use the k8s namespace rules (even stricter) and have the same version(-suffix) for everything
          # lowercase everything and replace all invalid characters with '-' and trim to 60 characters
          SANITIZED_BRANCH=$(echo -n "${BRANCH}" | tr '[:upper:]' '[:lower:]' | tr -C 'a-z0-9' '-')
          SANITIZED_BRANCH="${SANITIZED_BRANCH:0:60}"

          BUILD_VERSION="${BASE_VERSION}-${SANITIZED_BRANCH}-${RUN_NUMBER}"
          echo "BUILD_VERSION=${BUILD_VERSION}" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
      - id: login-azure
        name: Authenticate with Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Login to Azure Artifact Registry
        shell: bash
        run: |
          az acr login -n dataplanedeployment
      - id: login-gcp
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{secrets.GCR_WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{secrets.GCR_SERVICE_ACCOUNT}}
          access_token_lifetime: 1800s
      - name: Login to us Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.login-gcp.outputs.access_token }}
      - name: Login to eu Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.login-gcp.outputs.access_token }}
      - name: Login to asia Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: asia-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.login-gcp.outputs.access_token }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.ECR_AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.ECR_AWS_SECRET_ACCESS_KEY}}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./cmd/otelcontribcol/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            609927696493.dkr.ecr.us-west-2.amazonaws.com/opentelemetry-collector-contrib:${{steps.create-version.outputs.BUILD_VERSION}}
            ${{secrets.AAR_REPO_IMAGE}}:${{steps.create-version.outputs.BUILD_VERSION}}
            ${{secrets.GCR_ASIA_IMAGE}}:${{steps.create-version.outputs.BUILD_VERSION}}
            ${{secrets.GCR_EUROPE_IMAGE}}:${{steps.create-version.outputs.BUILD_VERSION}}
            ${{secrets.GCR_US_IMAGE}}:${{steps.create-version.outputs.BUILD_VERSION}}
